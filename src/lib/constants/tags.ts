/**
 * Tag categories used in JMdict-based parsing.
 *
 * @see https://www.edrdg.org/jmwsgi/edhelp.py?svc=jmdict#kwabbr
 */
export const tags = {
  pos: [
    'v', // Custom tag representing all verb entires, verb info is split (See https://github.com/seanmcbroom/JMdictSQLite/issues/5)
    'adj-f',
    'adj-i',
    'adj-ix',
    'adj-kari',
    'adj-ku',
    'adj-na',
    'adj-nari',
    'adj-no',
    'adj-pn',
    'adj-shiku',
    'adj-t',
    'adv',
    'adv-to',
    'conj',
    'cop',
    'ctr',
    'exp',
    'int',
    'n',
    'n-adv',
    'n-pr',
    'n-pref',
    'n-suf',
    'n-t',
    'num',
    'pn',
    'pref',
    'prt',
    'suf',
    'unc',
  ],

  verbGroup: [
    'v1',
    'v1-s',
    'v2a-s',
    'v2b-k',
    'v2b-s',
    'v2d-k',
    'v2d-s',
    'v2g-k',
    'v2g-s',
    'v2h-k',
    'v2h-s',
    'v2k-k',
    'v2k-s',
    'v2m-k',
    'v2m-s',
    'v2n-s',
    'v2r-k',
    'v2r-s',
    'v2s-s',
    'v2t-k',
    'v2t-s',
    'v2w-s',
    'v2y-k',
    'v2y-s',
    'v2z-s',
    'v4b',
    'v4g',
    'v4h',
    'v4k',
    'v4m',
    'v4n',
    'v4r',
    'v4s',
    'v4t',
    'v5aru',
    'v5b',
    'v5g',
    'v5k',
    'v5k-s',
    'v5m',
    'v5n',
    'v5r',
    'v5r-i',
    'v5s',
    'v5t',
    'v5u',
    'v5u-s',
    'v5uru',
    'vk',
    'vn',
    'vr',
    'vz',
    'v-unspec',
    'vs',
    'vs-c',
    'vs-i',
    'vs-s',
  ],

  transitivity: ['vt', 'vi'],

  auxiliary: ['aux', 'aux-adj', 'aux-v'],

  misc: [
    'abbr',
    'aphorism',
    'arch',
    'char',
    'chn',
    'col',
    'company',
    'creat',
    'dated',
    'dei',
    'derog',
    'doc',
    'euph',
    'ev',
    'fam',
    'fem',
    'fict',
    'form',
    'given',
    'group',
    'hist',
    'hon',
    'hum',
    'id',
    'joc',
    'leg',
    'm-sl',
    'male',
    'myth',
    'net-sl',
    'obj',
    'obs',
    'on-mim',
    'organization',
    'oth',
    'person',
    'place',
    'poet',
    'pol',
    'product',
    'proverb',
    'quote',
    'rare',
    'relig',
    'sens',
    'serv',
    'ship',
    'sl',
    'station',
    'surname',
    'uk',
    'unclass',
    'vulg',
    'work',
    'X',
    'yoji',
  ],

  field: [
    'agric',
    'anat',
    'archeol',
    'archit',
    'art',
    'astron',
    'audvid',
    'aviat',
    'baseb',
    'biochem',
    'biol',
    'bot',
    'boxing',
    'Buddh',
    'bus',
    'cards',
    'chem',
    'chmyth',
    'Christn',
    'civeng',
    'cloth',
    'comp',
    'cryst',
    'dent',
    'ecol',
    'econ',
    'elec',
    'electr',
    'embryo',
    'engr',
    'ent',
    'figskt',
    'film',
    'finc',
    'fish',
    'food',
    'gardn',
    'genet',
    'geogr',
    'geol',
    'geom',
    'go',
    'golf',
    'gramm',
    'grmyth',
    'hanaf',
    'horse',
    'internet',
    'jpmyth',
    'kabuki',
    'law',
    'ling',
    'logic',
    'MA',
    'mahj',
    'manga',
    'math',
    'mech',
    'med',
    'met',
    'mil',
    'min',
    'mining',
    'motor',
    'music',
    'noh',
    'ornith',
    'paleo',
    'pathol',
    'pharm',
    'phil',
    'photo',
    'physics',
    'physiol',
    'politics',
    'print',
    'prowres',
    'psy',
    'psyanal',
    'psych',
    'rail',
    'rommyth',
    'Shinto',
    'shogi',
    'ski',
    'sports',
    'stat',
    'stockm',
    'sumo',
    'surg',
    'telec',
    'tradem',
    'tv',
    'vet',
    'vidg',
    'zool',
  ],

  priority: [
    'news1',
    'news2',
    'spec1',
    'spec2',
    'ichi1',
    'ichi2',
    'gai1',
    'gai2',
    'nf01',
    'nf02',
    'nf03',
    'nf04',
    'nf05',
    'nf06',
    'nf07',
    'nf08',
    'nf09',
    'nf10',
    'nf11',
    'nf12',
    'nf13',
    'nf14',
    'nf15',
    'nf16',
    'nf17',
    'nf18',
    'nf19',
    'nf20',
    'nf21',
    'nf22',
    'nf23',
    'nf24',
    'nf25',
    'nf26',
    'nf27',
    'nf28',
    'nf29',
    'nf30',
    'nf31',
    'nf32',
    'nf33',
    'nf34',
    'nf35',
    'nf36',
    'nf37',
    'nf38',
    'nf39',
    'nf40',
    'nf41',
    'nf42',
    'nf43',
    'nf44',
    'nf45',
    'nf46',
    'nf47',
    'nf48',
  ],

  dialect: ['ksb', 'hob', 'bra', 'ktb', 'kyb', 'kyu', 'nab', 'osb', 'rkb', 'tsb', 'thb', 'tsug'],

  kanji: ['ateji', 'iK', 'ik', 'io', 'oK', 'rK', 'sK'],

  reading: ['gikun', 'ik', 'ok', 'rk', 'sk'],
} as const;

/**
 * Returns the category of a given tag string.
 * If unknown, returns `undefined`.
 */
export const tagCategoryMap = Object.fromEntries(
  Object.entries(tags).flatMap(([category, values]) =>
    values.map(tag => [tag, category as keyof typeof tags]),
  ),
);
